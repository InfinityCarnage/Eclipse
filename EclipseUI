-- Eclipse UI Library - Modern Dark Theme
-- A custom UI library built from scratch

local EclipseLib = {}
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")

-- Utility Functions
local function Tween(obj, props, duration)
    local tween = TweenService:Create(obj, TweenInfo.new(duration or 0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), props)
    tween:Play()
    return tween
end

local function MakeDraggable(frame, handle)
    local dragging, dragInput, dragStart, startPos
    
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Create Window
function EclipseLib:CreateWindow(config)
    local WindowManager = {}
    WindowManager.Tabs = {}
    WindowManager.CurrentTab = nil
    
    -- Create ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "EclipseUI"
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = CoreGui
    
    -- Main Frame (Create FIRST, then add loading inside)
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 520, 0, 450)
    MainFrame.Position = UDim2.new(0.5, -260, 0.5, -225)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Parent = ScreenGui
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = MainFrame
    
    -- Drop Shadow
    local Shadow = Instance.new("ImageLabel")
    Shadow.Name = "Shadow"
    Shadow.Size = UDim2.new(1, 30, 1, 30)
    Shadow.Position = UDim2.new(0, -15, 0, -15)
    Shadow.BackgroundTransparency = 1
    Shadow.Image = "rbxassetid://5554236805"
    Shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    Shadow.ImageTransparency = 0.4
    Shadow.ScaleType = Enum.ScaleType.Slice
    Shadow.SliceCenter = Rect.new(23, 23, 277, 277)
    Shadow.ZIndex = 0
    Shadow.Parent = MainFrame
    
    -- Loading Screen (inside MainFrame)
    local LoadingFrame = Instance.new("Frame")
    LoadingFrame.Name = "LoadingScreen"
    LoadingFrame.Size = UDim2.new(1, 0, 1, 0)
    LoadingFrame.Position = UDim2.new(0, 0, 0, 0)
    LoadingFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    LoadingFrame.BorderSizePixel = 0
    LoadingFrame.ZIndex = 100
    LoadingFrame.Parent = MainFrame
    
    local LoadingCorner = Instance.new("UICorner")
    LoadingCorner.CornerRadius = UDim.new(0, 10)
    LoadingCorner.Parent = LoadingFrame
    
    -- Logo Container
    local LogoContainer = Instance.new("Frame")
    LogoContainer.Name = "LogoContainer"
    LogoContainer.Size = UDim2.new(0, 150, 0, 150)
    LogoContainer.Position = UDim2.new(0.5, -75, 0.5, -95)
    LogoContainer.BackgroundTransparency = 1
    LogoContainer.ZIndex = 101
    LogoContainer.Parent = LoadingFrame
    
    -- Logo Circle Background
    local LogoCircle = Instance.new("Frame")
    LogoCircle.Name = "LogoCircle"
    LogoCircle.Size = UDim2.new(0, 120, 0, 120)
    LogoCircle.Position = UDim2.new(0.5, -60, 0, 0)
    LogoCircle.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    LogoCircle.BorderSizePixel = 0
    LogoCircle.ZIndex = 102
    LogoCircle.Parent = LogoContainer
    
    local CircleCorner = Instance.new("UICorner")
    CircleCorner.CornerRadius = UDim.new(1, 0)
    CircleCorner.Parent = LogoCircle
    
    -- Logo Text/Icon
    local LogoText = Instance.new("TextLabel")
    LogoText.Size = UDim2.new(1, 0, 1, 0)
    LogoText.BackgroundTransparency = 1
    LogoText.Text = config.LoadingIcon or "E"
    LogoText.TextColor3 = Color3.fromRGB(255, 255, 255)
    LogoText.TextSize = 48
    LogoText.Font = Enum.Font.GothamBold
    LogoText.ZIndex = 103
    LogoText.Parent = LogoCircle
    
    -- Loading Bar Container
    local LoadingBarBg = Instance.new("Frame")
    LoadingBarBg.Name = "LoadingBarBg"
    LoadingBarBg.Size = UDim2.new(0, 200, 0, 3)
    LoadingBarBg.Position = UDim2.new(0.5, -100, 1, 30)
    LoadingBarBg.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    LoadingBarBg.BorderSizePixel = 0
    LoadingBarBg.ZIndex = 102
    LoadingBarBg.Parent = LogoContainer
    
    local BarCorner = Instance.new("UICorner")
    BarCorner.CornerRadius = UDim.new(1, 0)
    BarCorner.Parent = LoadingBarBg
    
    -- Loading Bar Fill
    local LoadingBar = Instance.new("Frame")
    LoadingBar.Name = "LoadingBar"
    LoadingBar.Size = UDim2.new(0, 0, 1, 0)
    LoadingBar.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
    LoadingBar.BorderSizePixel = 0
    LoadingBar.ZIndex = 103
    LoadingBar.Parent = LoadingBarBg
    
    local FillCorner = Instance.new("UICorner")
    FillCorner.CornerRadius = UDim.new(1, 0)
    FillCorner.Parent = LoadingBar
    
    -- Loading Text
    local LoadingText = Instance.new("TextLabel")
    LoadingText.Size = UDim2.new(0, 200, 0, 20)
    LoadingText.Position = UDim2.new(0.5, -100, 1, 45)
    LoadingText.BackgroundTransparency = 1
    LoadingText.Text = "Loading..."
    LoadingText.TextColor3 = Color3.fromRGB(150, 150, 150)
    LoadingText.TextSize = 12
    LoadingText.Font = Enum.Font.Gotham
    LoadingText.ZIndex = 102
    LoadingText.Parent = LogoContainer
    
    -- Floating animation for logo
    local floatUp = true
    local floatConnection
    floatConnection = RunService.RenderStepped:Connect(function(dt)
        if floatUp then
            LogoContainer.Position = LogoContainer.Position + UDim2.new(0, 0, 0, 0.3 * dt * 60)
            if LogoContainer.Position.Y.Offset >= -90 then
                floatUp = false
            end
        else
            LogoContainer.Position = LogoContainer.Position - UDim2.new(0, 0, 0, 0.3 * dt * 60)
            if LogoContainer.Position.Y.Offset <= -100 then
                floatUp = true
            end
        end
    end)
    
    -- Simulate loading with progress bar
    task.spawn(function()
        local loadTime = config.LoadingTime or 2
        local steps = 20
        local stepTime = loadTime / steps
        
        for i = 1, steps do
            LoadingBar.Size = UDim2.new(i / steps, 0, 1, 0)
            LoadingText.Text = "Loading... " .. math.floor((i / steps) * 100) .. "%"
            task.wait(stepTime)
        end
        
        LoadingText.Text = "Complete!"
        task.wait(0.3)
        
        -- Stop floating animation
        floatConnection:Disconnect()
        
        -- Completion animation
        Tween(LogoCircle, {BackgroundColor3 = Color3.fromRGB(70, 130, 255)}, 0.3)
        Tween(LoadingBar, {BackgroundColor3 = Color3.fromRGB(100, 255, 100)}, 0.3)
        task.wait(0.3)
        
        -- Scale and fade animation
        Tween(LogoContainer, {Size = UDim2.new(0, 180, 0, 180)}, 0.3)
        Tween(LogoContainer, {Position = UDim2.new(0.5, -90, 0.5, -110)}, 0.3)
        Tween(LogoCircle, {BackgroundTransparency = 1}, 0.3)
        Tween(LogoText, {TextTransparency = 1}, 0.3)
        Tween(LoadingBarBg, {BackgroundTransparency = 1}, 0.3)
        Tween(LoadingBar, {BackgroundTransparency = 1}, 0.3)
        Tween(LoadingText, {TextTransparency = 1}, 0.3)
        task.wait(0.3)
        
        -- Fade out loading frame
        Tween(LoadingFrame, {BackgroundTransparency = 1}, 0.4)
        task.wait(0.5)
        
        LoadingFrame:Destroy()
    end)
    
    -- Top Bar
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.Size = UDim2.new(1, 0, 0, 45)
    TopBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    TopBar.BorderSizePixel = 0
    TopBar.Parent = MainFrame
    
    local TopCorner = Instance.new("UICorner")
    TopCorner.CornerRadius = UDim.new(0, 10)
    TopCorner.Parent = TopBar
    
    local TopBarExtend = Instance.new("Frame")
    TopBarExtend.Size = UDim2.new(1, 0, 0, 10)
    TopBarExtend.Position = UDim2.new(0, 0, 1, -10)
    TopBarExtend.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    TopBarExtend.BorderSizePixel = 0
    TopBarExtend.Parent = TopBar
    
    -- Title
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(0, 200, 1, 0)
    Title.Position = UDim2.new(0, 15, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = config.Name or "Eclipse Hub"
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 15
    Title.Font = Enum.Font.GothamBold
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = TopBar
    
    -- Top Right Buttons Container
    local ButtonsContainer = Instance.new("Frame")
    ButtonsContainer.Name = "Buttons"
    ButtonsContainer.Size = UDim2.new(0, 100, 0, 30)
    ButtonsContainer.Position = UDim2.new(1, -110, 0, 7.5)
    ButtonsContainer.BackgroundTransparency = 1
    ButtonsContainer.Parent = TopBar
    
    local ButtonsList = Instance.new("UIListLayout")
    ButtonsList.FillDirection = Enum.FillDirection.Horizontal
    ButtonsList.HorizontalAlignment = Enum.HorizontalAlignment.Right
    ButtonsList.Padding = UDim.new(0, 8)
    ButtonsList.Parent = ButtonsContainer
    
    -- Search Button (Icon)
    local SearchButton = Instance.new("TextButton")
    SearchButton.Name = "Search"
    SearchButton.Size = UDim2.new(0, 30, 0, 30)
    SearchButton.BackgroundTransparency = 1
    SearchButton.Text = "🔍"
    SearchButton.TextColor3 = Color3.fromRGB(180, 180, 180)
    SearchButton.TextSize = 16
    SearchButton.Font = Enum.Font.Gotham
    SearchButton.Parent = ButtonsContainer
    
    -- Settings Button (Icon)
    local SettingsButton = Instance.new("TextButton")
    SettingsButton.Name = "Settings"
    SettingsButton.Size = UDim2.new(0, 30, 0, 30)
    SettingsButton.BackgroundTransparency = 1
    SettingsButton.Text = "⚙"
    SettingsButton.TextColor3 = Color3.fromRGB(180, 180, 180)
    SettingsButton.TextSize = 16
    SettingsButton.Font = Enum.Font.Gotham
    SettingsButton.Parent = ButtonsContainer
    
    -- Minimize Button
    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Name = "Minimize"
    MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
    MinimizeButton.BackgroundTransparency = 1
    MinimizeButton.Text = "−"
    MinimizeButton.TextColor3 = Color3.fromRGB(180, 180, 180)
    MinimizeButton.TextSize = 18
    MinimizeButton.Font = Enum.Font.GothamBold
    MinimizeButton.Parent = ButtonsContainer
    
    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "Close"
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.BackgroundTransparency = 1
    CloseButton.Text = "×"
    CloseButton.TextColor3 = Color3.fromRGB(180, 180, 180)
    CloseButton.TextSize = 22
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Parent = ButtonsContainer
    
    CloseButton.MouseEnter:Connect(function()
        Tween(CloseButton, {TextColor3 = Color3.fromRGB(255, 90, 90)}, 0.2)
    end)
    
    CloseButton.MouseLeave:Connect(function()
        Tween(CloseButton, {TextColor3 = Color3.fromRGB(180, 180, 180)}, 0.2)
    end)
    
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
    
    MinimizeButton.MouseButton1Click:Connect(function()
        MainFrame.Visible = false
    end)
    
    -- Tab Bar
    local TabBar = Instance.new("Frame")
    TabBar.Name = "TabBar"
    TabBar.Size = UDim2.new(1, 0, 0, 45)
    TabBar.Position = UDim2.new(0, 0, 0, 45)
    TabBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TabBar.BorderSizePixel = 0
    TabBar.Parent = MainFrame
    
    local TabList = Instance.new("UIListLayout")
    TabList.FillDirection = Enum.FillDirection.Horizontal
    TabList.HorizontalAlignment = Enum.HorizontalAlignment.Left
    TabList.VerticalAlignment = Enum.VerticalAlignment.Center
    TabList.Padding = UDim.new(0, 8)
    TabList.Parent = TabBar
    
    local TabBarPadding = Instance.new("UIPadding")
    TabBarPadding.PaddingLeft = UDim.new(0, 15)
    TabBarPadding.Parent = TabBar
    
    -- Content Container
    local ContentContainer = Instance.new("Frame")
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Size = UDim2.new(1, 0, 1, -90)
    ContentContainer.Position = UDim2.new(0, 0, 0, 90)
    ContentContainer.BackgroundTransparency = 1
    ContentContainer.BorderSizePixel = 0
    ContentContainer.Parent = MainFrame
    
    -- Make draggable
    MakeDraggable(MainFrame, TopBar)
    
    -- Toggle UI Keybind
    local toggleKey = config.ToggleUIKeybind or Enum.KeyCode.K
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == toggleKey then
            MainFrame.Visible = not MainFrame.Visible
        end
    end)
    
    -- Create Tab Function
    function WindowManager:CreateTab(name, icon)
        local TabManager = {}
        TabManager.Sections = {}
        
        -- Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Name = name
        TabButton.Size = UDim2.new(0, 100, 0, 32)
        TabButton.Position = UDim2.new(0, 0, 0.5, -16)
        TabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        TabButton.BorderSizePixel = 0
        TabButton.Text = ""
        TabButton.Parent = TabBar
        
        local TabCorner = Instance.new("UICorner")
        TabCorner.CornerRadius = UDim.new(0, 8)
        TabCorner.Parent = TabButton
        
        -- Tab Icon & Label Container
        local TabContent = Instance.new("Frame")
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.BackgroundTransparency = 1
        TabContent.Parent = TabButton
        
        local TabIcon = Instance.new("ImageLabel")
        TabIcon.Size = UDim2.new(0, 16, 0, 16)
        TabIcon.Position = UDim2.new(0, 12, 0.5, -8)
        TabIcon.BackgroundTransparency = 1
        TabIcon.Image = "rbxassetid://7733911816" -- Gear icon as placeholder
        TabIcon.ImageColor3 = Color3.fromRGB(180, 180, 180)
        TabIcon.Parent = TabContent
        
        local TabLabel = Instance.new("TextLabel")
        TabLabel.Size = UDim2.new(1, -35, 1, 0)
        TabLabel.Position = UDim2.new(0, 32, 0, 0)
        TabLabel.BackgroundTransparency = 1
        TabLabel.Text = name
        TabLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
        TabLabel.TextSize = 12
        TabLabel.Font = Enum.Font.Gotham
        TabLabel.TextXAlignment = Enum.TextXAlignment.Left
        TabLabel.Parent = TabContent
        
        -- Active Indicator (removed bottom line)
        local ActiveIndicator = Instance.new("Frame")
        ActiveIndicator.Name = "Indicator"
        ActiveIndicator.Size = UDim2.new(1, 0, 0, 2)
        ActiveIndicator.Position = UDim2.new(0, 0, 1, -2)
        ActiveIndicator.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
        ActiveIndicator.BorderSizePixel = 0
        ActiveIndicator.Visible = false
        ActiveIndicator.Parent = TabButton
        
        -- Tab Content
        local TabContentFrame = Instance.new("ScrollingFrame")
        TabContentFrame.Name = name .. "Content"
        TabContentFrame.Size = UDim2.new(1, 0, 1, 0)
        TabContentFrame.BackgroundTransparency = 1
        TabContentFrame.BorderSizePixel = 0
        TabContentFrame.ScrollBarThickness = 4
        TabContentFrame.ScrollBarImageColor3 = Color3.fromRGB(70, 70, 70)
        TabContentFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
        TabContentFrame.Visible = false
        TabContentFrame.Parent = ContentContainer
        
        local ContentList = Instance.new("UIListLayout")
        ContentList.SortOrder = Enum.SortOrder.LayoutOrder
        ContentList.Padding = UDim.new(0, 12)
        ContentList.Parent = TabContentFrame
        
        local ContentPadding = Instance.new("UIPadding")
        ContentPadding.PaddingTop = UDim.new(0, 15)
        ContentPadding.PaddingLeft = UDim.new(0, 20)
        ContentPadding.PaddingRight = UDim.new(0, 20)
        ContentPadding.PaddingBottom = UDim.new(0, 15)
        ContentPadding.Parent = TabContentFrame
        
        ContentList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            TabContentFrame.CanvasSize = UDim2.new(0, 0, 0, ContentList.AbsoluteContentSize.Y + 30)
        end)
        
        -- Tab Button Click
        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(WindowManager.Tabs) do
                tab.Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                tab.Label.TextColor3 = Color3.fromRGB(180, 180, 180)
                tab.Icon.ImageColor3 = Color3.fromRGB(180, 180, 180)
                tab.Indicator.Visible = false
                tab.Content.Visible = false
            end
            
            TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            TabLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            TabIcon.ImageColor3 = Color3.fromRGB(255, 255, 255)
            ActiveIndicator.Visible = false
            TabContentFrame.Visible = true
            WindowManager.CurrentTab = TabManager
        end)
        
        TabButton.MouseEnter:Connect(function()
            if WindowManager.CurrentTab ~= TabManager then
                Tween(TabButton, {BackgroundColor3 = Color3.fromRGB(55, 55, 55)}, 0.2)
            end
        end)
        
        TabButton.MouseLeave:Connect(function()
            if WindowManager.CurrentTab ~= TabManager then
                Tween(TabButton, {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}, 0.2)
            end
        end)
        
        TabManager.Button = TabButton
        TabManager.Content = TabContentFrame
        TabManager.Label = TabLabel
        TabManager.Icon = TabIcon
        TabManager.Indicator = ActiveIndicator
        table.insert(WindowManager.Tabs, TabManager)
        
        -- Auto-select first tab
        if #WindowManager.Tabs == 1 then
            TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            TabLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            TabIcon.ImageColor3 = Color3.fromRGB(255, 255, 255)
            ActiveIndicator.Visible = false
            TabContentFrame.Visible = true
            WindowManager.CurrentTab = TabManager
        end
        
        -- Create Section Function
        function TabManager:CreateSection(name)
            local SectionManager = {}
            
            local SectionLabel = Instance.new("TextLabel")
            SectionLabel.Name = name
            SectionLabel.Size = UDim2.new(1, 0, 0, 20)
            SectionLabel.BackgroundTransparency = 1
            SectionLabel.Text = name
            SectionLabel.TextColor3 = Color3.fromRGB(120, 120, 120)
            SectionLabel.TextSize = 12
            SectionLabel.Font = Enum.Font.GothamBold
            SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
            SectionLabel.Parent = TabContentFrame
            
            SectionManager.Label = SectionLabel
            table.insert(TabManager.Sections, SectionManager)
            
            -- Create Button
            function SectionManager:CreateButton(config)
                local ButtonFrame = Instance.new("Frame")
                ButtonFrame.Name = config.Name
                ButtonFrame.Size = UDim2.new(1, 0, 0, 38)
                ButtonFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                ButtonFrame.BorderSizePixel = 0
                ButtonFrame.Parent = TabContentFrame
                
                local ButtonCorner = Instance.new("UICorner")
                ButtonCorner.CornerRadius = UDim.new(0, 6)
                ButtonCorner.Parent = ButtonFrame
                
                local Button = Instance.new("TextButton")
                Button.Size = UDim2.new(1, 0, 1, 0)
                Button.BackgroundTransparency = 1
                Button.Text = config.Name
                Button.TextColor3 = Color3.fromRGB(220, 220, 220)
                Button.TextSize = 13
                Button.Font = Enum.Font.Gotham
                Button.TextXAlignment = Enum.TextXAlignment.Left
                Button.Parent = ButtonFrame
                
                local ButtonPadding = Instance.new("UIPadding")
                ButtonPadding.PaddingLeft = UDim.new(0, 15)
                ButtonPadding.Parent = Button
                
                Button.MouseEnter:Connect(function()
                    Tween(ButtonFrame, {BackgroundColor3 = Color3.fromRGB(55, 55, 55)}, 0.2)
                end)
                
                Button.MouseLeave:Connect(function()
                    Tween(ButtonFrame, {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}, 0.2)
                end)
                
                Button.MouseButton1Click:Connect(function()
                    Tween(ButtonFrame, {BackgroundColor3 = Color3.fromRGB(65, 65, 65)}, 0.1)
                    task.wait(0.1)
                    Tween(ButtonFrame, {BackgroundColor3 = Color3.fromRGB(55, 55, 55)}, 0.1)
                    if config.Callback then
                        config.Callback()
                    end
                end)
                
                return ButtonFrame
            end
            
            return SectionManager
        end
        
        return TabManager
    end
    
    -- Notification Function
    function WindowManager:Notify(config)
        local NotifFrame = Instance.new("Frame")
        NotifFrame.Name = "Notification"
        NotifFrame.Size = UDim2.new(0, 320, 0, 90)
        NotifFrame.Position = UDim2.new(1, 10, 1, -100)
        NotifFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        NotifFrame.BorderSizePixel = 0
        NotifFrame.Parent = ScreenGui
        
        local NotifCorner = Instance.new("UICorner")
        NotifCorner.CornerRadius = UDim.new(0, 8)
        NotifCorner.Parent = NotifFrame
        
        local NotifTitle = Instance.new("TextLabel")
        NotifTitle.Size = UDim2.new(1, -20, 0, 25)
        NotifTitle.Position = UDim2.new(0, 15, 0, 12)
        NotifTitle.BackgroundTransparency = 1
        NotifTitle.Text = config.Title or "Notification"
        NotifTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        NotifTitle.TextSize = 14
        NotifTitle.Font = Enum.Font.GothamBold
        NotifTitle.TextXAlignment = Enum.TextXAlignment.Left
        NotifTitle.Parent = NotifFrame
        
        local NotifContent = Instance.new("TextLabel")
        NotifContent.Size = UDim2.new(1, -30, 1, -42)
        NotifContent.Position = UDim2.new(0, 15, 0, 37)
        NotifContent.BackgroundTransparency = 1
        NotifContent.Text = config.Content or ""
        NotifContent.TextColor3 = Color3.fromRGB(180, 180, 180)
        NotifContent.TextSize = 12
        NotifContent.Font = Enum.Font.Gotham
        NotifContent.TextXAlignment = Enum.TextXAlignment.Left
        NotifContent.TextYAlignment = Enum.TextYAlignment.Top
        NotifContent.TextWrapped = true
        NotifContent.Parent = NotifFrame
        
        Tween(NotifFrame, {Position = UDim2.new(1, -330, 1, -100)}, 0.5)
        
        task.wait(config.Duration or 5)
        
        Tween(NotifFrame, {Position = UDim2.new(1, 10, 1, -100)}, 0.5)
        task.wait(0.5)
        NotifFrame:Destroy()
    end
    
    return WindowManager
end

return EclipseLib
